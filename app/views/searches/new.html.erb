<div class="flex justify-center items-center mx-auto">
  <%= button_tag '行き先を探す', type: 'button', id: 'toggle-form-button', class: 'bg-orange-400 hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 text-lg text-white font-bold py-3 px-6 rounded-lg my-4' %>
</div>

<div id="search-form" class="transition-all ease-in-out duration-500 max-h-0 overflow-hidden m-5">
  <%= render 'shared/search_place_form' %>
</div>

<script>
  // ページのDOM要素が全て読み込まれたら、ブラウザのセッションストレージに格納されている緯度と経度のデータを取得し、上記フォーム内の該当するhidden_fieldに設定する処理
  // 現在地の緯度と経度のデータは、ユーザーがフォームで選択した内容とまとめてコントローラに送って処理したいため、hidden_fieldに設定する
  //document.addEventListener('DOMContentLoaded', (event) => {
  //const latitude = sessionStorage.getItem('latitude');
  //const longitude = sessionStorage.getItem('longitude');
//
  //document.getElementById('hidden_latitude').value = latitude;
  //document.getElementById('hidden_longitude').value = longitude;
  //});

  document.addEventListener('DOMContentLoaded', () => {
    const toggleButton = document.getElementById('toggle-form-button');
    const searchForm = document.getElementById('search-form');

    toggleButton.addEventListener('click', () => {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
          // 位置情報の取得に成功したら、隠しフィールドに値をセット
          document.getElementById('hidden_latitude').value = position.coords.latitude;
          document.getElementById('hidden_longitude').value = position.coords.longitude;

          sessionStorage.setItem('latitude', position.coords.latitude); // 検索結果表示画面(searches/result)の検索フォームにも、取得した緯度と経度の情報を渡す必要があるため、ブラウザのセッションストレージに格納しておく。
          sessionStorage.setItem('longitude', position.coords.longitude);

          // 位置情報の取得後、フォームを表示
          showForm(searchForm);
        }, (error) => {
          console.error('位置情報の取得に失敗しました:', error);
          // 位置情報の取得に失敗した場合の処理（任意）
        });
      } else {
        console.log("Geolocation is not supported by this browser.");
        // Geolocation APIがサポートされていない場合の処理（任意）
      }
    });
  });

  function showForm(formElement) {
    if (formElement.classList.contains('max-h-0')) {
      formElement.classList.remove('max-h-0');
      formElement.classList.add('max-h-screen');
    } else {
      formElement.classList.add('max-h-0');
      formElement.classList.remove('max-h-screen');
    }
  }
</script>